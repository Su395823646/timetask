<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.su.timetask.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.su.timetask.dao.domain.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="Sex" property="sex" jdbcType="VARCHAR" />
    <result column="Age" property="age" jdbcType="VARCHAR" />
    <result column="Role_id" property="roleId" jdbcType="INTEGER" />
    <result column="Node_id" property="nodeId" jdbcType="INTEGER" />
    <result column="Tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, Name, Sex, Age, Role_id, Node_id, Tel, email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.su.timetask.dao.domain.Employee" >
    insert into t_employee (id, Name, Sex, 
      Age, Role_id, Node_id, 
      Tel, email)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{age,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{nodeId,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.su.timetask.dao.domain.Employee" >
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="sex != null" >
        Sex,
      </if>
      <if test="age != null" >
        Age,
      </if>
      <if test="roleId != null" >
        Role_id,
      </if>
      <if test="nodeId != null" >
        Node_id,
      </if>
      <if test="tel != null" >
        Tel,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null" >
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.su.timetask.dao.domain.Employee" >
    update t_employee
    <set >
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        Sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        Age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        Role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null" >
        Node_id = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        Tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.su.timetask.dao.domain.Employee" >
    update t_employee
    set Name = #{name,jdbcType=VARCHAR},
      Sex = #{sex,jdbcType=VARCHAR},
      Age = #{age,jdbcType=VARCHAR},
      Role_id = #{roleId,jdbcType=INTEGER},
      Node_id = #{nodeId,jdbcType=INTEGER},
      Tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>